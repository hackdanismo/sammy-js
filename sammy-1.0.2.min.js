((window,document)=>{"use strict";const sammyLibrary={version:"1.0.2",sammy(selector){let elements=[];if(typeof selector==="string"){elements=document.querySelectorAll(selector);if(elements.length===0){console.warn(`No elements found for the selector: "${selector}".`);return{addClass:()=>this,removeClass:()=>this,toggleClass:()=>this,toggle:()=>this,addAttribute:()=>this,removeAttribute:()=>this,css:()=>this,on:()=>this,html:()=>this,text:()=>this,hide:()=>this,show:()=>this,append:()=>this,prepend:()=>this,remove:()=>this}}}else if(selector instanceof Element){elements=[selector]}else{console.warn("Invalid selector: Selector must be a string or a DOM element.")}const methods={addClass:function(className){elements.forEach((element=>{element.classList.add(className)}));return methods},removeClass:function(className){elements.forEach((element=>{element.classList.remove(className);if(element.classList.length===0){element.removeAttribute("class")}}));return methods},toggleClass:function(className){elements.forEach((element=>{if(element.classList.contains(className)){element.classList.remove(className);if(element.classList.length===0){element.removeAttribute("class")}}else{element.classList.add(className)}}));return methods},toggle:function(){elements.forEach((element=>{if(window.getComputedStyle(element).display==="none"){element.style.display=""}else{element.style.display="none"}if(element.style.cssText.trim()===""){element.removeAttribute("style")}}));return methods},addAttribute:function(attributeName,attributeValue){if(attributeName===undefined||attributeValue===undefined||attributeName===null||attributeValue===null){throw new Error("Both attribute name and value must be provided and cannot be null.")}elements.forEach((element=>{element.setAttribute(attributeName,attributeValue)}));return methods},removeAttribute:function(attributeName){elements.forEach((element=>{element.removeAttribute(attributeName)}));return methods},css:function(property,value){if(typeof property==="string"&&value===undefined){return elements[0]?window.getComputedStyle(elements[0])[property]:undefined}elements.forEach((element=>{element.style[property]=value}));return methods},on:function(eventType,callback){if(typeof eventType!=="string"||typeof callback!=="function"){throw new Error("Event type must be a string and callback must be a function.")}elements.forEach((element=>{element.addEventListener(eventType,(function(event){callback.call(element,event)}))}));return methods},html:function(htmlContent){if(htmlContent===undefined){return elements[0]?elements[0].innerHTML:undefined}elements.forEach((element=>{element.innerHTML=htmlContent}));return methods},text:function(textContent){if(textContent===undefined){return elements[0]?elements[0].textContent:undefined}elements.forEach((element=>{element.textContent=textContent}));return methods},hide:function(){elements.forEach((element=>{element.style.display="none"}));return methods},show:function(){elements.forEach((element=>{element.style.display="";if(element.style.cssText.trim()===""){element.removeAttribute("style")}}));return methods},_manipulateContent:function(content,position){elements.forEach((element=>{if(typeof content==="string"){element.insertAdjacentHTML(position,content)}else if(content instanceof Element){if(position==="beforeend"){element.appendChild(content)}else if(position==="afterbegin"){element.insertBefore(content,element.firstChild)}}}));return methods},append:function(content){return methods._manipulateContent(content,"beforeend")},prepend:function(content){return methods._manipulateContent(content,"afterbegin")},remove:function(){elements.forEach((element=>{element.remove()}));return methods}};return methods},ready(fn){if(document.readyState!=="loading"){fn()}else{document.addEventListener("DOMContentLoaded",fn)}}};window.sammy=sammyLibrary.sammy;window.sammy.ready=sammyLibrary.ready;window.sammy.version=sammyLibrary.version})(window,document);